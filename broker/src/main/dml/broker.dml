package pt.ulisboa.tecnico.softeng.broker.domain;

class Broker {
	String code;
	String name;
	int counter;

	String nifAsSeller;
	String nifAsBuyer;
	String iban;
}

relation DomainRootHasBrokerApplication {
	.pt.ist.fenixframework.DomainRoot playsRole root {
		multiplicity 1..1;
	}
	Broker playsRole broker {
		multiplicity 0..*;
	}
}

class Adventure {
	String ID;
	LocalDate begin;
	LocalDate end;

	String paymentConfirmation;
	String paymentCancellation;
	String roomConfirmation;
	String roomCancellation;
	String activityConfirmation;
	String activityCancellation;
    String rentingConfirmation;
    String rentingCancellation;
    String invoiceReference;

    double margin;
    double currentAmount;
    boolean rentVehicle;
    boolean invoiceCancelled;
}

relation BrokerHasAdventures {
	Broker playsRole broker {
		multiplicity 1..1;
	}
	Adventure playsRole adventure {
		multiplicity 0..*;
	}
}

class AdventureState {
	int numOfRemoteErrors;
}

class ProcessPaymentState extends AdventureState;
class ReserveActivityState extends AdventureState;
class BookRoomState extends AdventureState;
class RentVehicleState extends AdventureState;
class ConfirmedState extends AdventureState;
class TaxPaymentState extends AdventureState;
class UndoState extends AdventureState;
class CancelledState extends AdventureState;

relation AdventureHasState {
	Adventure playsRole adventure {
		multiplicity 0..1;
	}
	AdventureState playsRole state {
		multiplicity 1..1;
	}
}

class BulkRoomBooking {
	int number;
	LocalDate arrival;
	LocalDate departure;
	boolean cancelled;
	int numberOfHotelExceptions;
	int numberOfRemoteErrors;
	String buyerNif;
	String buyerIban;
}

relation BrokerHasBulkRoomBookings {
	Broker playsRole broker {
		multiplicity 1..1;
	}
	BulkRoomBooking playsRole roomBulkBooking {
		multiplicity 0..*;
	}
}

class Reference {
	String value;
}

relation BulkRoomBookingHasReferences {
	BulkRoomBooking playsRole bulkRoomBooking {
		multiplicity 1..1;
	}
	Reference playsRole reference {
		multiplicity 0..*;
	}
}

class Client {
    String IBAN;
    String NIF;
    String drivingLicense;
    int age;
}

relation BrokerHasClients {
    Broker playsRole broker {
    	multiplicity 1..1;
    }

    Client playsRole client {
        multiplicity 0..*;
    }
}

relation AdventureHasClient {
    Adventure playsRole adventure {
    	multiplicity 1..1;
    }

    Client playsRole client {
        multiplicity 1..1;
    }
}